[12:29] akinori.ihara: １章書いた！
----
コードレビューは，パッチをmaster repositoryにマージする前に，複数人のPeer reviewerがpatchを検証するstepであり，特に，OSS開発はテストを系統立てて行われていないことも多いため []，このレビューのstepが高品質，高可読性なソースコードを社会にリリースを実現している．特に，彼らが彼らの評価の合意形成をとるために，sufficientなdiscussionを持てば，そのパッチはより高品質なソフトウェアとしてリリースできる [Shane]．

最近までのOSS開発では，patcheの提出，コードレビューのためにメーリングリストやバグ追跡ツールのような本来の目的とは異なるツールが使用されていた [][][]．今日でさえ，多くのプロジェクトがこのようなツールを使用している．一方で，最近ではGerrit~¥footnote{Gerrit: ¥url{https://code.google.com/p/gerrit/}}，Phabricator~¥footnote{Phabricator: ¥url{http://phabricator.org/}}，ReviewBoard~¥footnote{ReviewBoard: ¥url{https://www.reviewboard.org/}}を始めとするコードレビュー管理システムがOSSプロジェクトや企業などで使用されている．コードレビュー管理システムでは，レビューアは容易な操作で利用することができ，変更箇所の閲覧，変更箇所へ直接コメントを挿入など，ツール上でコードレビューに関する議論や投票形式の評価を行うことができる．このようなコードレビュー管理をシステムで一元化した管理方式をModern Code Reviewと呼ばれ，コードレビュー担当者，評価結果の共有を容易にした~¥cite{Bacchelli_ICSE2013}．

このようなModern Code Reviewでは，パッチが作成され，コードレビューシステムに提出されたとき，コアレビューアと呼ばれる最終決断を下す権利を有する開発者が，議論をとりまとめる．コアレビューアはパッチを検証するための複数人の（権限を持たない）一般レビューアを招待し，検証を依頼する．一般レビューアの意見が合意すれば，当該パッチはスムーズにmaster repositoryへのマージに進むかもしれない．しかし，時には意見が分かれることもあり，コアレビューアは一般レビューアの議論を追跡しないといけないことも多く，１日に50-60件のパッチが投稿されるため，全てのパッチの議論を追跡することはhard workである．

膨大なパッチの議論の進捗を俯瞰的に簡単に把握するために，コアレビューアはコードレビューシステムで一般レビューアの評価を-1, 0, +1までの議論を一覧で確認することができる~¥footnote{例えば・・・}．votingだけでsufficient discussionができたのかがわかるのだろうか？レビューアの合意から最終評価を下すためには，レビューアの評価の信用し，一般レビューア間で合意できているか見ることが必要となり，コアレビューアは，一般レビューアが比較的賛成しているが納得するタイミングで決定するのかもしれない．しかし，残念なことに，招待したレビューアが必ずしも全員レビューするとは限らず，招待された一般レビューアのうち，X¥%の一般レビューアしか投票していない．また，我々の従来研究[CASCON]では，一般レビューアの評価結果は，単純多数決ルールに従っているとは限らず，votingだけで正確に判断することは容易ではない．

本研究では，コアレビューアがパッチの最終決断を下すために，どのように一般レビューアの評価結果（voting）を評価しているのかEmprical studyを行う．本ケーススタディは，レビューアの意見はどの程度信じることができるのか．コアレビューアは，レビューアの評価結果に基づき，どのタイミングで最終決断を下すのかを明らかにし，コアレビューアの評価の自動化を目指す．以下のRQの分析を実施するために，QtとOpenStackのデータを使ってケーススタディを行う．¥¥
¥rqone¥¥
¥todo{モチベーション}¥¥
¥rqtwo¥¥
¥todo{モチベーション}¥¥
¥rqthree¥¥
¥todo{モチベーション}¥¥

¥todo{貢献}

続く~¥ref{sec:background}章では，コードレビュープロセスについて述べる．¥ref{sec:motivation}章では，実験方法を説明し，¥ref{sec:methodology}章では，パッチ再投稿予測の実験結果について述べる．¥ref{}章では，実験．¥ref{sec:discussion}章で本論文の考察を行い，最後に¥ref{sec:Conclusion}章で本論文のまとめと今後の課題について述べる．

 <<< 
